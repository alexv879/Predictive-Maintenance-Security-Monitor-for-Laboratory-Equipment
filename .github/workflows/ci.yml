name: Premonitor CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Syntax Check
      run: |
        Get-ChildItem -Path pythonsoftware -Filter *.py | ForEach-Object {
          Write-Host "Checking syntax: $($_.Name)"
          python -m py_compile $_.FullName
        }
      shell: pwsh

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 pythonsoftware/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 pythonsoftware/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true

    - name: Validate Datasets
      run: |
        python scripts/check_datasets.py
      continue-on-error: true

    - name: Run Dataset Tests
      run: |
        python tests/test_datasets.py

    - name: Run Import Tests
      run: |
        python tests/test_imports.py
      continue-on-error: true

    - name: Smoke Test Training
      run: |
        python train.py --mode smoke_test --model all
      continue-on-error: false

    - name: Export TFLite Models
      run: |
        python export_tflite.py --model thermal_smoke_test --quantize int8
        python export_tflite.py --model acoustic_smoke_test --quantize int8
      continue-on-error: false

    - name: Run Pi Smoke Test
      run: |
        python pi_smoke_test.py
      continue-on-error: false

    - name: Generate Test Report
      if: always()
      run: |
        python tests/run_all_tests.py
      continue-on-error: true

  dataset-validation:
    name: Dataset Validation
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Detailed Dataset Check
      run: |
        python scripts/check_datasets.py --verbose
      continue-on-error: true

  code-quality:
    name: Code Quality Checks
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install quality tools
      run: |
        pip install flake8 black

    - name: Check formatting with black
      run: |
        black --check pythonsoftware/
      continue-on-error: true

    - name: Comprehensive linting
      run: |
        flake8 pythonsoftware/ --max-line-length=127 --statistics
      continue-on-error: true
